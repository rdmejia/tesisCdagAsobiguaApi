// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tesisCdagAsobiguaApi.Persistence.Contexts;

namespace tesisCdagAsobiguaApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190715025550_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.Login", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("PlayerId");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<long>("TrainerId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            Id = -1001L,
                            PlayerId = -2002L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 50, 50, 636, DateTimeKind.Local).AddTicks(8600),
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -2002L,
                            PlayerId = -3003L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 51, 50, 636, DateTimeKind.Local).AddTicks(9160),
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -3003L,
                            PlayerId = -2002L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 52, 50, 636, DateTimeKind.Local).AddTicks(9170),
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -4004L,
                            PlayerId = -3003L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 53, 50, 636, DateTimeKind.Local).AddTicks(9170),
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -5005L,
                            PlayerId = -2002L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 54, 50, 636, DateTimeKind.Local).AddTicks(9180),
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -6006L,
                            PlayerId = -4004L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 636, DateTimeKind.Local).AddTicks(9180),
                            TrainerId = -5005L
                        });
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.Shot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("BackstrokePause");

                    b.Property<double>("Finesse");

                    b.Property<double>("Finish");

                    b.Property<double>("FollowThrough");

                    b.Property<double>("Jab");

                    b.Property<long>("PlayerId");

                    b.Property<double>("ShotInterval");

                    b.Property<double>("Straightness");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<double>("TipSteer");

                    b.Property<long>("TrainerId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Shots");

                    b.HasData(
                        new
                        {
                            Id = -1001L,
                            BackstrokePause = 4.0,
                            Finesse = 3.0,
                            Finish = 0.40000000000000002,
                            FollowThrough = 1.0,
                            Jab = 3.7000000000000002,
                            PlayerId = -2002L,
                            ShotInterval = 5.5999999999999996,
                            Straightness = 9.1999999999999993,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 50, 50, 617, DateTimeKind.Local).AddTicks(9490),
                            TipSteer = 4.4000000000000004,
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -2002L,
                            BackstrokePause = 4.0,
                            Finesse = 3.0,
                            Finish = 0.40000000000000002,
                            FollowThrough = 1.0,
                            Jab = 3.7000000000000002,
                            PlayerId = -3003L,
                            ShotInterval = 5.5999999999999996,
                            Straightness = 9.1999999999999993,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 50, 50, 634, DateTimeKind.Local).AddTicks(5190),
                            TipSteer = 4.4000000000000004,
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -3003L,
                            BackstrokePause = 4.0,
                            Finesse = 3.0,
                            Finish = 0.40000000000000002,
                            FollowThrough = 1.0,
                            Jab = 3.7000000000000002,
                            PlayerId = -4004L,
                            ShotInterval = 5.5999999999999996,
                            Straightness = 9.1999999999999993,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 50, 50, 634, DateTimeKind.Local).AddTicks(5210),
                            TipSteer = 4.4000000000000004,
                            TrainerId = -1001L
                        },
                        new
                        {
                            Id = -4004L,
                            BackstrokePause = 4.0,
                            Finesse = 3.0,
                            Finish = 0.40000000000000002,
                            FollowThrough = 1.0,
                            Jab = 3.7000000000000002,
                            PlayerId = -4004L,
                            ShotInterval = 5.5999999999999996,
                            Straightness = 9.1999999999999993,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 50, 50, 634, DateTimeKind.Local).AddTicks(5210),
                            TipSteer = 4.4000000000000004,
                            TrainerId = -5005L
                        });
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("binary(64)");

                    b.Property<byte>("UserType");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1001L,
                            Email = "trainer1@mail.com",
                            LastName = "Trainer1Lastname",
                            Name = "Trainer1Name",
                            Password = new byte[] { 125, 241, 139, 69, 209, 209, 155, 97, 148, 174, 244, 131, 176, 198, 211, 118, 249, 163, 204, 146, 95, 42, 145, 154, 172, 20, 158, 50, 209, 26, 22, 101, 35, 62, 232, 53, 148, 47, 233, 160, 27, 59, 1, 47, 130, 217, 118, 13, 75, 225, 72, 227, 94, 161, 9, 8, 90, 63, 228, 154, 134, 225, 83, 162 },
                            UserType = (byte)0,
                            Username = "trainer1"
                        },
                        new
                        {
                            Id = -2002L,
                            Email = "player1@mail.com",
                            LastName = "Player1Lastname",
                            Name = "Player1Name",
                            Password = new byte[] { 125, 241, 139, 69, 209, 209, 155, 97, 148, 174, 244, 131, 176, 198, 211, 118, 249, 163, 204, 146, 95, 42, 145, 154, 172, 20, 158, 50, 209, 26, 22, 101, 35, 62, 232, 53, 148, 47, 233, 160, 27, 59, 1, 47, 130, 217, 118, 13, 75, 225, 72, 227, 94, 161, 9, 8, 90, 63, 228, 154, 134, 225, 83, 162 },
                            UserType = (byte)1,
                            Username = "player1"
                        },
                        new
                        {
                            Id = -3003L,
                            Email = "player2@mail.com",
                            LastName = "Player2Lastname",
                            Name = "Player2Name",
                            Password = new byte[] { 125, 241, 139, 69, 209, 209, 155, 97, 148, 174, 244, 131, 176, 198, 211, 118, 249, 163, 204, 146, 95, 42, 145, 154, 172, 20, 158, 50, 209, 26, 22, 101, 35, 62, 232, 53, 148, 47, 233, 160, 27, 59, 1, 47, 130, 217, 118, 13, 75, 225, 72, 227, 94, 161, 9, 8, 90, 63, 228, 154, 134, 225, 83, 162 },
                            UserType = (byte)1,
                            Username = "player2"
                        },
                        new
                        {
                            Id = -4004L,
                            Email = "player3@mail.com",
                            LastName = "Player3Lastname",
                            Name = "Player3Name",
                            Password = new byte[] { 125, 241, 139, 69, 209, 209, 155, 97, 148, 174, 244, 131, 176, 198, 211, 118, 249, 163, 204, 146, 95, 42, 145, 154, 172, 20, 158, 50, 209, 26, 22, 101, 35, 62, 232, 53, 148, 47, 233, 160, 27, 59, 1, 47, 130, 217, 118, 13, 75, 225, 72, 227, 94, 161, 9, 8, 90, 63, 228, 154, 134, 225, 83, 162 },
                            UserType = (byte)1,
                            Username = "player3"
                        },
                        new
                        {
                            Id = -5005L,
                            Email = "trainer2@mail.com",
                            LastName = "Trainer2Lastname",
                            Name = "Traine2rName",
                            Password = new byte[] { 125, 241, 139, 69, 209, 209, 155, 97, 148, 174, 244, 131, 176, 198, 211, 118, 249, 163, 204, 146, 95, 42, 145, 154, 172, 20, 158, 50, 209, 26, 22, 101, 35, 62, 232, 53, 148, 47, 233, 160, 27, 59, 1, 47, 130, 217, 118, 13, 75, 225, 72, 227, 94, 161, 9, 8, 90, 63, 228, 154, 134, 225, 83, 162 },
                            UserType = (byte)0,
                            Username = "trainer2"
                        });
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.XyzShot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ShotId");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<double>("X");

                    b.Property<double>("Y");

                    b.Property<double>("Z");

                    b.HasKey("Id");

                    b.HasIndex("ShotId");

                    b.ToTable("XyzShots");

                    b.HasData(
                        new
                        {
                            Id = -101L,
                            ShotId = -1001L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 630, DateTimeKind.Local).AddTicks(9460),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -202L,
                            ShotId = -1001L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 632, DateTimeKind.Local).AddTicks(1380),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -303L,
                            ShotId = -1001L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 633, DateTimeKind.Local).AddTicks(1400),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -404L,
                            ShotId = -2002L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 631, DateTimeKind.Local).AddTicks(1410),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -505L,
                            ShotId = -3003L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 631, DateTimeKind.Local).AddTicks(1410),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -606L,
                            ShotId = -4004L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 631, DateTimeKind.Local).AddTicks(1410),
                            X = 0.34000000000000002,
                            Y = -2.3500000000000001,
                            Z = 1.55
                        },
                        new
                        {
                            Id = -707L,
                            ShotId = -4004L,
                            TimeStamp = new DateTime(2019, 7, 14, 20, 55, 50, 632, DateTimeKind.Local).AddTicks(1410),
                            X = 1.1200000000000001,
                            Y = 2.4199999999999999,
                            Z = -1.55
                        });
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.Login", b =>
                {
                    b.HasOne("tesisCdagAsobiguaApi.Domain.Models.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tesisCdagAsobiguaApi.Domain.Models.User", "Trainer")
                        .WithMany("Logins")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.Shot", b =>
                {
                    b.HasOne("tesisCdagAsobiguaApi.Domain.Models.User", "Player")
                        .WithMany("Shots")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tesisCdagAsobiguaApi.Domain.Models.User", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tesisCdagAsobiguaApi.Domain.Models.XyzShot", b =>
                {
                    b.HasOne("tesisCdagAsobiguaApi.Domain.Models.Shot", "Shot")
                        .WithMany("XyzShots")
                        .HasForeignKey("ShotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
